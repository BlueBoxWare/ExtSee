-Turtles.java
 -All
  -Ninja
   methodOnNinja(): void
   onNinja() on Ninja
  -Object
   also((T) -> kotlin.Unit) on T
   apply(T.() -> kotlin.Unit) on T
   asKCallableImpl() on Any?
   asKFunctionImpl() on Any?
   asKPropertyImpl() on Any?
   clone(): Object
   equals(Object): boolean
   finalize(): void
   getClass(): Class<?>
   hashCode(): int
   javaClass on T
   let((T) -> R) on T
   notify(): void
   notifyAll(): void
   onAny() on Any
   onAnyFromLibrary() on Any
   onAnyFromLibraryInternal() on Any
   onAnyNullable() on Any?
   run(T.() -> R) on T
   takeIf((T) -> kotlin.Boolean) on T
   takeUnless((T) -> kotlin.Boolean) on T
   to(B) on A
   toString(): String
   toString() on Any?
   wait(): void
   wait(long): void
   wait(long, int): void
  -Turtles
   methodOnTurtles(): void
   onTurtles() on Turtles
  methodOnAll(): void
  onAll() on All
  fieldOnAll: int
  fieldOnTurtles: int
 -Down
  -All
   methodOnAll(): void
   onAll() on All
  -Ninja
   methodOnNinja(): void
   onNinja() on Ninja
  -Object
   also((T) -> kotlin.Unit) on T
   apply(T.() -> kotlin.Unit) on T
   asKCallableImpl() on Any?
   asKFunctionImpl() on Any?
   asKPropertyImpl() on Any?
   clone(): Object
   equals(Object): boolean
   finalize(): void
   getClass(): Class<?>
   hashCode(): int
   javaClass on T
   let((T) -> R) on T
   notify(): void
   notifyAll(): void
   onAny() on Any
   onAnyFromLibrary() on Any
   onAnyFromLibraryInternal() on Any
   onAnyNullable() on Any?
   run(T.() -> R) on T
   takeIf((T) -> kotlin.Boolean) on T
   takeUnless((T) -> kotlin.Boolean) on T
   to(B) on A
   toString(): String
   toString() on Any?
   wait(): void
   wait(long): void
   wait(long, int): void
  -Power
   methodOnPower(): void
   onPower() on Power
  -The
   methodOnThe(): void
   onThe() on The
  -Turtles
   methodOnTurtles(): void
   onTurtles() on Turtles
  -Way
   methodOnWay(): void
   onWay() on Way
  methodOnDown(): void
  onDown() on Down
  fieldOnAll: int
  fieldOnDown: int
  fieldOnThe: int
  fieldOnTurtles: int
  fieldOnWay: int
 -Ninja
  -Object
   also((T) -> kotlin.Unit) on T
   apply(T.() -> kotlin.Unit) on T
   asKCallableImpl() on Any?
   asKFunctionImpl() on Any?
   asKPropertyImpl() on Any?
   javaClass on T
   let((T) -> R) on T
   onAny() on Any
   onAnyFromLibrary() on Any
   onAnyFromLibraryInternal() on Any
   onAnyNullable() on Any?
   run(T.() -> R) on T
   takeIf((T) -> kotlin.Boolean) on T
   takeUnless((T) -> kotlin.Boolean) on T
   to(B) on A
   toString() on Any?
  methodOnNinja(): void
  onNinja() on Ninja
 -Power
  -Object
   also((T) -> kotlin.Unit) on T
   apply(T.() -> kotlin.Unit) on T
   asKCallableImpl() on Any?
   asKFunctionImpl() on Any?
   asKPropertyImpl() on Any?
   javaClass on T
   let((T) -> R) on T
   onAny() on Any
   onAnyFromLibrary() on Any
   onAnyFromLibraryInternal() on Any
   onAnyNullable() on Any?
   run(T.() -> R) on T
   takeIf((T) -> kotlin.Boolean) on T
   takeUnless((T) -> kotlin.Boolean) on T
   to(B) on A
   toString() on Any?
  methodOnPower(): void
  onPower() on Power
 -The
  -All
   methodOnAll(): void
   onAll() on All
  -Ninja
   methodOnNinja(): void
   onNinja() on Ninja
  -Object
   also((T) -> kotlin.Unit) on T
   apply(T.() -> kotlin.Unit) on T
   asKCallableImpl() on Any?
   asKFunctionImpl() on Any?
   asKPropertyImpl() on Any?
   clone(): Object
   equals(Object): boolean
   finalize(): void
   getClass(): Class<?>
   hashCode(): int
   javaClass on T
   let((T) -> R) on T
   notify(): void
   notifyAll(): void
   onAny() on Any
   onAnyFromLibrary() on Any
   onAnyFromLibraryInternal() on Any
   onAnyNullable() on Any?
   run(T.() -> R) on T
   takeIf((T) -> kotlin.Boolean) on T
   takeUnless((T) -> kotlin.Boolean) on T
   to(B) on A
   toString(): String
   toString() on Any?
   wait(): void
   wait(long): void
   wait(long, int): void
  -Power
   methodOnPower(): void
   onPower() on Power
  -Turtles
   methodOnTurtles(): void
   onTurtles() on Turtles
  methodOnThe(): void
  onThe() on The
  fieldOnAll: int
  fieldOnThe: int
  fieldOnTurtles: int
 -Turtles
  -Object
   also((T) -> kotlin.Unit) on T
   apply(T.() -> kotlin.Unit) on T
   asKCallableImpl() on Any?
   asKFunctionImpl() on Any?
   asKPropertyImpl() on Any?
   clone(): Object
   equals(Object): boolean
   finalize(): void
   getClass(): Class<?>
   hashCode(): int
   javaClass on T
   let((T) -> R) on T
   notify(): void
   notifyAll(): void
   onAny() on Any
   onAnyFromLibrary() on Any
   onAnyFromLibraryInternal() on Any
   onAnyNullable() on Any?
   run(T.() -> R) on T
   takeIf((T) -> kotlin.Boolean) on T
   takeUnless((T) -> kotlin.Boolean) on T
   to(B) on A
   toString(): String
   toString() on Any?
   wait(): void
   wait(long): void
   wait(long, int): void
  methodOnTurtles(): void
  onTurtles() on Turtles
  fieldOnTurtles: int
 -Way
  -All
   methodOnAll(): void
   onAll() on All
  -Ninja
   methodOnNinja(): void
   onNinja() on Ninja
  -Object
   also((T) -> kotlin.Unit) on T
   apply(T.() -> kotlin.Unit) on T
   asKCallableImpl() on Any?
   asKFunctionImpl() on Any?
   asKPropertyImpl() on Any?
   clone(): Object
   equals(Object): boolean
   finalize(): void
   getClass(): Class<?>
   hashCode(): int
   javaClass on T
   let((T) -> R) on T
   notify(): void
   notifyAll(): void
   onAny() on Any
   onAnyFromLibrary() on Any
   onAnyFromLibraryInternal() on Any
   onAnyNullable() on Any?
   run(T.() -> R) on T
   takeIf((T) -> kotlin.Boolean) on T
   takeUnless((T) -> kotlin.Boolean) on T
   to(B) on A
   toString(): String
   toString() on Any?
   wait(): void
   wait(long): void
   wait(long, int): void
  -Power
   methodOnPower(): void
   onPower() on Power
  -The
   methodOnThe(): void
   onThe() on The
  -Turtles
   methodOnTurtles(): void
   onTurtles() on Turtles
  methodOnWay(): void
  onWay() on Way
  fieldOnAll: int
  fieldOnThe: int
  fieldOnTurtles: int
  fieldOnWay: int
